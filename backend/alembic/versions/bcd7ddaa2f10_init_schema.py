"""Init schema

Revision ID: bcd7ddaa2f10
Revises:
Create Date: 2025-01-04 22:14:36.329406

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "bcd7ddaa2f10"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "league",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("league_id", sa.Integer(), nullable=False),
        sa.Column("region_id", sa.Integer(), nullable=False),
        sa.Column("season_id", sa.Integer(), nullable=False),
        sa.Column("queue_id", sa.Integer(), nullable=False),
        sa.Column("team_type", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("league_id", "region_id", "season_id", "queue_id", "team_type"),
    )
    op.create_table(
        "profile",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("profile_id", sa.String(), nullable=False),
        sa.Column("realm_id", sa.Integer(), nullable=False),
        sa.Column("region_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("profile_id", "realm_id", "region_id"),
    )
    op.create_table(
        "character",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("display_name", sa.String(), nullable=False),
        sa.Column("clan_name", sa.String(), nullable=True),
        sa.Column("clan_tag", sa.String(), nullable=True),
        sa.Column("profile_path", sa.String(), nullable=False),
        sa.Column("profile_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["profile.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("profile_id", "display_name"),
    )
    op.create_table(
        "ladder",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("ladder_id", sa.Integer(), nullable=False),
        sa.Column("region_id", sa.Integer(), nullable=False),
        sa.Column("min_rating", sa.Integer(), nullable=True),
        sa.Column("max_rating", sa.Integer(), nullable=True),
        sa.Column("member_count", sa.Integer(), nullable=True),
        sa.Column("league_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["league_id"],
            ["league.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("league_id", "ladder_id", "region_id"),
    )
    op.create_table(
        "match",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("map", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("date", sa.Integer(), nullable=False),
        sa.Column("decision", sa.String(), nullable=False),
        sa.Column("speed", sa.String(), nullable=False),
        sa.Column("profile_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["profile.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("profile_id", "date"),
    )
    op.create_table(
        "character_mmr",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("race", sa.Enum("ZERG", "TERRAN", "PROTOSS", "RANDOM", name="race"), nullable=False),
        sa.Column("mmr", sa.Integer(), nullable=False),
        sa.Column("character_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["character_id"],
            ["character.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("character_id", "race", "mmr"),
    )
    op.create_table(
        "ladder_member",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("join_timestamp", sa.Integer(), nullable=False),
        sa.Column("points", sa.Integer(), nullable=True),
        sa.Column("wins", sa.Integer(), nullable=True),
        sa.Column("losses", sa.Integer(), nullable=True),
        sa.Column("highest_rank", sa.Integer(), nullable=True),
        sa.Column("previous_rank", sa.Integer(), nullable=True),
        sa.Column("favorite_race_p1", sa.String(), nullable=True),
        sa.Column("profile_id", sa.Uuid(), nullable=True),
        sa.Column("ladder_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ladder_id"],
            ["ladder.id"],
        ),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["profile.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("profile_id", "ladder_id", "join_timestamp"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("ladder_member")
    op.drop_table("character_mmr")
    op.drop_table("match")
    op.drop_table("ladder")
    op.drop_table("character")
    op.drop_table("profile")
    op.drop_table("league")
    # ### end Alembic commands ###
